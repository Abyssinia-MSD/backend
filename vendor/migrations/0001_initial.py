# Generated by Django 3.2 on 2022-01-16 12:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_enumfield.db.fields
import vendor.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('logo', models.CharField(max_length=200)),
                ('location', models.CharField(default=False, max_length=200)),
                ('shopOwner', models.ForeignKey(default=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='User', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('image', models.ImageField(null=True, upload_to='images/')),
                ('price', models.PositiveIntegerField()),
                ('amount', models.PositiveIntegerField(null=True)),
                ('category', django_enumfield.db.fields.EnumField(default=1, enum=vendor.models.Category)),
                ('type', django_enumfield.db.fields.EnumField(default=1, enum=vendor.models.Type)),
                ('color', models.ManyToManyField(to='vendor.Color')),
                ('shope', models.ForeignKey(default=False, on_delete=django.db.models.deletion.CASCADE, to='vendor.shop')),
                ('size', models.ManyToManyField(to='vendor.Size')),
            ],
        ),
    ]
